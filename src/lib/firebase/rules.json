{
  "rules": {
    "watchParties": {
      "$partyId": {
        // Regras de leitura/escrita para watch parties
        ".read": "auth != null && (root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid) || !data.child('isPrivate').exists() || data.child('isPrivate').val() == false)",
        ".write": "auth != null && (root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid))",
        
        "participants": {
          "$userId": {
            ".read": "auth != null",
            ".write": "auth != null && auth.uid == $userId",
            ".validate": "newData.hasChildren(['isOnline', 'lastSeen', 'hasVideo', 'hasAudio'])",
            "isOnline": { ".validate": "newData.isBoolean()" },
            "lastSeen": { ".validate": "newData.isNumber()" },
            "hasVideo": { ".validate": "newData.isBoolean()" },
            "hasAudio": { ".validate": "newData.isBoolean()" },
            "isTyping": { ".validate": "newData.isBoolean()" }
          }
        },
        
        "chat": {
          "$messageId": {
            ".read": "auth != null && root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid)",
            ".write": "auth != null && root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid)",
            ".validate": "newData.hasChildren(['userId', 'content', 'timestamp', 'type'])",
            "userId": { ".validate": "newData.val() === auth.uid" },
            "content": { ".validate": "newData.isString() && newData.val().length <= 1000" },
            "timestamp": { ".validate": "newData.isNumber()" },
            "type": { ".validate": "newData.val() === 'text' || newData.val() === 'emoji' || newData.val() === 'system'" }
          }
        },
        
        "reactions": {
          "$reactionId": {
            ".read": "auth != null && root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid)",
            ".write": "auth != null && root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid)",
            ".validate": "newData.hasChildren(['userId', 'type', 'timestamp'])",
            "userId": { ".validate": "newData.val() === auth.uid" },
            "type": { ".validate": "newData.isString()" },
            "timestamp": { ".validate": "newData.isNumber()" }
          }
        },
        
        "playback": {
          ".read": "auth != null && root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid)",
          ".write": "auth != null && (root.child('watchParties').child($partyId).child('participants').child(auth.uid).child('role').val() === 'host' || data.parent().child('syncMode').val() === 'democratic')",
          ".validate": "newData.hasChildren(['currentTime', 'isPlaying', 'playbackRate', 'updatedAt', 'updatedBy'])",
          "currentTime": { ".validate": "newData.isNumber()" },
          "isPlaying": { ".validate": "newData.isBoolean()" },
          "playbackRate": { ".validate": "newData.isNumber() && newData.val() >= 0.25 && newData.val() <= 2" },
          "updatedAt": { ".validate": "newData.isNumber()" },
          "updatedBy": { ".validate": "newData.val() === auth.uid" }
        },
        
        "settings": {
          ".read": "auth != null && root.child('watchParties').child($partyId).child('participants').hasChild(auth.uid)",
          ".write": "auth != null && root.child('watchParties').child($partyId).child('participants').child(auth.uid).child('role').val() === 'host'",
          ".validate": "newData.hasChildren(['syncMode', 'chatEnabled', 'reactionsEnabled'])",
          "syncMode": { ".validate": "newData.val() === 'host_only' || newData.val() === 'democratic'" },
          "chatEnabled": { ".validate": "newData.isBoolean()" },
          "reactionsEnabled": { ".validate": "newData.isBoolean()" }
        }
      }
    },
    
    "users": {
      "$userId": {
        ".read": "auth != null",
        ".write": "auth != null && auth.uid === $userId",
        ".validate": "newData.hasChildren(['username', 'lastActive'])",
        "username": { ".validate": "newData.isString() && newData.val().length >= 3 && newData.val().length <= 30" },
        "lastActive": { ".validate": "newData.isNumber()" },
        "status": { ".validate": "newData.val() === 'online' || newData.val() === 'offline' || newData.val() === 'away'" },
        "preferences": {
          ".validate": "newData.hasChildren(['notifications', 'theme'])",
          "notifications": { ".validate": "newData.isBoolean()" },
          "theme": { ".validate": "newData.val() === 'light' || newData.val() === 'dark'" }
        }
      }
    }
  }
}